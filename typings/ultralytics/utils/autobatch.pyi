"""
This type stub file was generated by pyright.
"""

import torch
from typing import Union

"""Functions for estimating the best YOLO batch size to use a fraction of the available CUDA memory in PyTorch."""
def check_train_batch_size(model: torch.nn.Module, imgsz: int = ..., amp: bool = ..., batch: Union[int, float] = ..., max_num_obj: int = ...) -> int:
    """
    Compute optimal YOLO training batch size using the autobatch() function.

    Args:
        model (torch.nn.Module): YOLO model to check batch size for.
        imgsz (int, optional): Image size used for training.
        amp (bool, optional): Use automatic mixed precision if True.
        batch (int | float, optional): Fraction of GPU memory to use. If -1, use default.
        max_num_obj (int, optional): The maximum number of objects from dataset.

    Returns:
        (int): Optimal batch size computed using the autobatch() function.

    Notes:
        If 0.0 < batch < 1.0, it's used as the fraction of GPU memory to use.
        Otherwise, a default fraction of 0.6 is used.
    """
    ...

def autobatch(model: torch.nn.Module, imgsz: int = ..., fraction: float = ..., batch_size: int = ..., max_num_obj: int = ...) -> int:
    """
    Automatically estimate the best YOLO batch size to use a fraction of the available CUDA memory.

    Args:
        model (torch.nn.Module): YOLO model to compute batch size for.
        imgsz (int, optional): The image size used as input for the YOLO model.
        fraction (float, optional): The fraction of available CUDA memory to use.
        batch_size (int, optional): The default batch size to use if an error is detected.
        max_num_obj (int, optional): The maximum number of objects from dataset.

    Returns:
        (int): The optimal batch size.
    """
    ...

