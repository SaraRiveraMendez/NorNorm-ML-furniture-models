"""
This type stub file was generated by pyright.
"""

from typing import Optional
from roboflow.models.inference import InferenceModel

class InstanceSegmentationModel(InferenceModel):
    """
    Run inference on a instance segmentation model hosted on
        Roboflow or served through Roboflow Inference.
    """
    def __init__(self, api_key: str, version_id: str, colors: Optional[dict] = ..., preprocessing: Optional[dict] = ..., local: Optional[str] = ...) -> None:
        """
        Create a InstanceSegmentationModel object through which you can run inference.

        Args:
            api_key (str): private roboflow api key
            version_id (str): the workspace/project id
            colors (dict): colors to use for the image
            preprocessing (dict): preprocessing to use for the image
            local (str): localhost address and port if pointing towards local inference engine
        """
        ...
    
    def predict(self, image_path, confidence=...): # -> PredictionGroup:
        """
        Infers detections based on image from a specified model and image path.

        Args:
            image_path (str): path to the image you'd like to perform prediction on
            confidence (int): confidence threshold for predictions, on a scale from 0-100

        Returns:
            PredictionGroup Object

        Example:
            >>> import roboflow

            >>> rf = roboflow.Roboflow(api_key="")

            >>> project = rf.workspace().project("PROJECT_ID")

            >>> model = project.version("1").model

            >>> prediction = model.predict("YOUR_IMAGE.jpg")
        """
        ...
    
    def __str__(self) -> str:
        ...
    


